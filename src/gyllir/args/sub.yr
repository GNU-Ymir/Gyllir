mod gyllir::args::sub;

import std::args, std::syntax::lexer;
import std::io;

/**
 * Class thrown by a sub command if the help was printed
 */
pub class HelpPrinted over Exception {
    pub self () {}
}

/**
 * Ancestor of all commands (Maybe this should be in the std, I don't know)
 */
pub class @abstract SubCommand {

    let mut _isSet : bool;

    /**
     * @params: 
     *   - isSet: if true, then we assume that the sub command was created by the argument parser
     */
    prot self (isSet : bool) with _isSet = isSet {}

    /**
     * @returns: true if the sub command has been activated by the argument parser
     */
    pub def isSet (self)-> bool {
        self._isSet 
    }
    
}

